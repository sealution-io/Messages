syntax = "proto3";

import "google/protobuf/timestamp.proto";

option php_namespace = "Sealution\\Messages";

message SetTimeMsg {
  google.protobuf.Timestamp date_time = 1;
}

message GetTimeMsg {
}

message TimeMsg {
  google.protobuf.Timestamp date_time = 1;
}

message HeartBeatMsg {
  google.protobuf.Timestamp date_time = 1;
  bytes mac_address = 2;
}

message GetConfigGatewayGlobalMsg{
  bytes gateway_name = 1;
  uint32 gateway_powerline_connection_interval = 2;
  uint32 gateway_powerline_connection_timeout = 3;
  bytes gateway_location = 4;
  uint32 gateway_filter_configuration = 5;
}

message GetConfigSensorConfigMsg{
  uint32 sensor_config_index = 1;
  bytes sensor_name = 2;
  uint32 sensor_type = 3;
  bytes mac_address = 4;
  uint32 receive_period = 5;
  bytes extra_config = 6;
  uint32 enable = 7;
}

message GetConfigStatusConfigMsg{
  bytes mac_address = 1;
  int32 battery_level = 2;
}

message SetConfigMsg {
}

message GetConfigMsg {
  enum eMsgType{
    MSG_TYPE_CONFIG_GATEWAY_GLOBAL = 0;
    MSG_TYPE_CONFIG_SENSOR_CONFIG = 1;
    MSG_TYPE_CONFIG_STATUS = 2;
  }
  eMsgType msg_type = 1;
  oneof OneOfMsg {
    GetConfigGatewayGlobalMsg config_gateway_global = 2;
    GetConfigSensorConfigMsg config_sensor_config = 3;
    GetConfigStatusConfigMsg config_status = 4;
  }
}

message ConfigMsg {
  bytes configuration = 1;
}

message SensorDataMsg {
  google.protobuf.Timestamp date_time = 1;
  bytes bt_id = 2;
  int32 rssi = 4;
  bytes data = 5;
}

message BTChipDataMsg {
  enum eMsgType{
    MSG_TYPE_BTCHIP_SENSORDATA = 0;
    MSG_TYPE_BTCHIP_GET_CONFIG = 1;
  }
  eMsgType msg_type = 1;
  oneof OneOfMsg {
    SensorDataMsg sensordata = 3;
    GetConfigMsg getconfigmsg = 4;
  }
}

message TestThroughPutMsg{
  bytes data_pattern = 1;
  int32 nof_data_patterns_in_packet = 2;
  int32 time_between_packets = 3;
  int32 nof_packets = 4;
}

message TestThroughPutWithStatsMsg{
  bytes data_pattern = 1;
  int32 nof_data_patterns_in_packet = 2;
  int32 time_between_packets = 3;
  int32 nof_packets = 4;
  int32 room_short_id = 5;
}


message TestRestartDeviceMsg{
}

message TestMuteBTMsg{
  bool mute = 1;
}

message TestStatsMsg{
}

message TestClrStatsMsg{
}

message TestStatsRespMsg{
  int32 msgRx = 1;
  int32 msgTx = 2;
  int32 msgErrors = 3;
}

message TestMsg{
  enum eMsgType{
    MSG_TYPE_TEST_THROUGHPUT = 0;
    MSG_TYPE_TEST_RESTART_DEVICE = 1;
    MSG_TYPE_TEST_MUTE_BT = 2;
    MSG_TYPE_TEST_STATS = 3;
    MSG_TYPE_TEST_CLR_STATS = 4;
    MSG_TYPE_TEST_THROUGHPUT_WITH_STATS = 5;
  }
  eMsgType msg_type = 1;
  oneof OneOfMsg {
    TestThroughPutMsg test_throughput = 2;
    TestRestartDeviceMsg test_restart_device = 3;
    TestMuteBTMsg test_mute_bt = 4;
    TestStatsMsg test_stats = 5;
    TestClrStatsMsg test_clr_stats = 6;
    TestThroughPutWithStatsMsg test_throughput_with_stats = 7;
  }
}

message TestThroughPutRespMsg{
  int32 idx = 1;
  bytes test_data = 2;
  google.protobuf.Timestamp date_time_rm = 3;
  google.protobuf.Timestamp date_time_cm = 4;
}

message TestThroughPutWithStatsRespMsg{
  int32 idx = 1;
  int32 received_packets = 2;
  int32 received_bytes = 3;
  int32 first_packet_tick = 4;
  int32 last_packet_tick = 5;
}

message TestRespMsg{
  enum eMsgType{
    MSG_TYPE_TEST_THROUGHPUT_RESP = 0;
    MSG_TYPE_TEST_STATS_RESP = 1;
    MSG_TYPE_TEST_THROUGHPUT_WITH_STATS_RESP = 2;
  }
  eMsgType msg_type = 1;
  oneof OneofMsg {
    TestThroughPutRespMsg test_throughput_resp = 2;
    TestStatsRespMsg test_stats_resp = 3;
    TestThroughPutWithStatsRespMsg test_throughput_with_stats_resp = 4;
  }
}

message RMMsg{
  enum eMsgType{
    MSG_TYPE_SENSOR_DATA = 0;
  }
  google.protobuf.Timestamp date_time = 1;
  bytes mac_address = 2;
  eMsgType msg_type = 3;
  oneof OneOfMsg {
    SensorDataMsg sensor_data = 4;
  }
}

message MainMsg{
  enum eMsgType{
    MSG_TYPE_SET_TIME = 0;
    MSG_TYPE_GET_TIME = 1;
    MSG_TYPE_TIME = 2;
    MSG_TYPE_HEARTBEAT = 3;
    MSG_TYPE_SET_CONFIG = 4;
    MSG_TYPE_GET_CONFIG = 5;
    MSG_TYPE_CONFIG = 6;
    MSG_TYPE_TEST = 7;
    MSG_TYPE_TEST_RESP = 8;
    MSG_TYPE_RM = 9;
  }
  eMsgType msg_type = 1;
  oneof oneofMsg {
    SetTimeMsg set_time = 2;
    GetTimeMsg get_time = 3;
    TimeMsg time = 4;
    HeartBeatMsg heartbeat= 5;
    SetConfigMsg set_config = 6;
    GetConfigMsg get_config = 7;
    ConfigMsg config = 8;
    TestMsg test = 9;
    TestRespMsg test_resp = 10;
    RMMsg rm = 11;
  }
  int32 msg_id = 12;
}

message MQTTSensorDataMsg{
  google.protobuf.Timestamp date_time_bt = 1;
  google.protobuf.Timestamp date_time_rm = 2;
  google.protobuf.Timestamp date_time_cm = 3;
  int32 rssi = 4;
  bytes data = 5;
  bytes mac_bt = 6;
  bytes mac_rm = 7;
  bytes mac_cm = 8;

}

